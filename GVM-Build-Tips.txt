Openvas / GVM build hints

# Check GVM status after install
    tail -f /opt/gvm/var/log/gvm/gsad.log
    sudo tail -f /opt/gvm/var/log/gvm/gvmd.log
    tail -f /opt/gvm/var/log/gvm/openvas.log
    tail -f /opt/gvm/var/log/gvm/ospd-openvas.log

# Udate GVM in this order
    sudo -u gvm -g gvm /opt/gvm/bin/greenbone-nvt-sync
    sudo -u gvm -g gvm /opt/gvm/sbin/openvas --update-vt-info
    sudo -u gvm -g gvm /opt/gvm/sbin/greenbone-feed-sync --type SCAP
    sudo -u gvm -g gvm /opt/gvm/sbin/greenbone-feed-sync --type CERT
    sudo -u gvm -g gvm /opt/gvm/sbin/greenbone-feed-sync --type GVMD_DATA

or

# Update gvm user crontab
  sudo -i
  su gvm
  crontab -e
  11 5 * * * /opt/gvm/bin/greenbone-nvt-sync
  19 10 * * * /opt/gvm/sbin/openvas --update-vt-info
  29 15 * * * /opt/gvm/sbin/greenbone-feed-sync --type SCAP
  43 20 * * * /opt/gvm/sbin/greenbone-feed-sync --type CERT
  53 0 * * *  /opt/gvm/sbin/greenbone-feed-sync --type GVMD_DATA
  sudo systemctl restart cron
  
    
# Rebuild GVM NVT database - if things go really south 
  export $(sudo cat /etc/default/gvmd-pg)
  sudo -E -u gvm -g gvm gvmd --rebuild

#Rename pax8 admin user
  1. You need to first create a new user with admin privileges:
  gvmd --create-user=new_user --password=<password> --role=Admin

  2. Then inherit tasks from user admin:
     gvmd â€“delete-user=admin --inheritor=new_user

# Install realy mailserver
  sudo apt update
  sudo apt install postfix mailutils (select internet only type)
  sudo nano /etc/postfix/main.cf (change line to: inet_interfaces = loopback-only)
  sudo /etc/inet.d/postfix restart
  echo "email message body" | mail -s "test subject" youremail@yourdomain.com (check spam folder)


#disable pax8 user and creaet new admin account
    sudo adduser username
    sudo usermod -aG sudo username
    sudo passwd -l pax8
    #then create ssh keys for the new account


#Raspian needs Python 3.7 for GVM install. Below shows how to set Python 3.7 aa the default python version
    #Get build dependencies
    sudo apt-get update -y
    sudo apt-get install build-essential tk-dev libncurses5-dev libncursesw5-dev libreadline6-dev libdb5.3-dev libgdbm-dev libsqlite3-dev libssl-dev libbz2-dev             libexpat1-dev liblzma-dev zlib1g-dev libffi-dev uuid-dev -y

    #Install Python from source
    wget https://www.python.org/ftp/python/3.7.13/Python-3.7.13.tgz
    tar xf Python-3.7.13.tgz  
    cd Python-3.7.13
    ./configure --enable-optimizations
    make -j 4
    sudo make altinstall

    #Clean up build dependencies
    sudo apt remove --purge tk-dev libncurses5-dev libncursesw5-dev libreadline6-dev libdb5.3-dev libgdbm-dev libsqlite3-dev libssl-dev libbz2-dev libexpat1-dev            liblzma-dev libffi-dev uuid-dev
    sudo apt autoremove -y
    rm Python-3.7.13.tgz
    sudo rm -R Python-3.7.13

    # Upgrade 
    sudo apt update && sudo apt upgrade

    #Set alternative Python default 
    sudo update-alternatives --install /usr/bin/python python /usr/local/bin/python3.7 1
    sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.9
    sudo update-alternatives --config python # select new default version from menu
    python --version

